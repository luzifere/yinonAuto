<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitReportReporter -->
<testsuite skipped="8" hostname="yinons-MacBook-Pro-2.local" name="Tests.BestMutch" tests="9" failures="0" timestamp="03 Jan 2019 10:29:18 GMT" time="69.352" errors="1">
  <testcase name="setup" time="69.352" classname="Tests.BestMutch">
    <error type="org.openqa.selenium.NoSuchSessionException" message="Session does not exist
Build info: version: &#039;3.8.1&#039;, revision: &#039;6e95a6684b&#039;, time: &#039;2017-12-01T19:05:32.194Z&#039;
System info: host: &#039;yinons-MacBook-Pro-2.local&#039;, ip: &#039;10.0.0.15&#039;, os.name: &#039;Mac OS X&#039;, os.arch: &#039;x86_64&#039;, os.version: &#039;10.13.6&#039;, java.version: &#039;1.8.0_151&#039;
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {app: /Users/yinonwishi/Desktop/W..., automationName: XCuiTest, browserName: , databaseEnabled: false, deviceName: iPhone XS Max, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 5000, platform: MAC, platformName: MAC, platformVersion: 12.1, startIWDP: true, takesScreenshot: true, udid: 597677D3-9663-4A04-BA68-6A0..., webStorageEnabled: false}
Session ID: 552acef0-10c4-4a13-b60c-6dd5ffcd6e1a">
      <![CDATA[org.openqa.selenium.NoSuchSessionException: Session does not exist
Build info: version: '3.8.1', revision: '6e95a6684b', time: '2017-12-01T19:05:32.194Z'
System info: host: 'yinons-MacBook-Pro-2.local', ip: '10.0.0.15', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.13.6', java.version: '1.8.0_151'
Driver info: io.appium.java_client.ios.IOSDriver
Capabilities {app: /Users/yinonwishi/Desktop/W..., automationName: XCuiTest, browserName: , databaseEnabled: false, deviceName: iPhone XS Max, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: false, newCommandTimeout: 5000, platform: MAC, platformName: MAC, platformVersion: 12.1, startIWDP: true, takesScreenshot: true, udid: 597677D3-9663-4A04-BA68-6A0..., webStorageEnabled: false}
Session ID: 552acef0-10c4-4a13-b60c-6dd5ffcd6e1a
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:164)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:129)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:46)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.ios.IOSDriver.execute(IOSDriver.java:1)
at io.appium.java_client.HasSessionDetails.getSessionDetails(HasSessionDetails.java:39)
at io.appium.java_client.HasSessionDetails.getSessionDetail(HasSessionDetails.java:56)
at io.appium.java_client.HasSessionDetails.getPlatformName(HasSessionDetails.java:65)
at io.appium.java_client.internal.JsonToMobileElementConverter.<init>(JsonToMobileElementConverter.java:49)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:89)
at io.appium.java_client.AppiumDriver.<init>(AppiumDriver.java:94)
at io.appium.java_client.ios.IOSDriver.<init>(IOSDriver.java:82)
at Tests.BaseTest.capabileties(BaseTest.java:51)
at Tests.BaseTest.setup(BaseTest.java:102)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.MethodInvocationHelper.invokeMethodConsideringTimeout(MethodInvocationHelper.java:59)
at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:455)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:222)
at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:142)
at org.testng.TestRunner.beforeRun(TestRunner.java:529)
at org.testng.TestRunner.run(TestRunner.java:497)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
    </error>
  </testcase> <!-- setup -->
  <testcase name="BestMatchCheepFamle" time="0.000" classname="Tests.BestMutch">
    <skipped/>
  </testcase> <!-- BestMatchCheepFamle -->
  <testcase name="BestMatchFeMaleExpensive" time="0.000" classname="Tests.BestMutch">
    <skipped/>
  </testcase> <!-- BestMatchFeMaleExpensive -->
  <testcase name="BestMatchFeMaleNormal" time="0.000" classname="Tests.BestMutch">
    <skipped/>
  </testcase> <!-- BestMatchFeMaleNormal -->
  <testcase name="BestMatchFeMaleCheepExpensive" time="0.000" classname="Tests.BestMutch">
    <skipped/>
  </testcase> <!-- BestMatchFeMaleCheepExpensive -->
  <testcase name="BestMatchExpensiveMale" time="0.000" classname="Tests.BestMutch">
    <skipped/>
  </testcase> <!-- BestMatchExpensiveMale -->
  <testcase name="BestMatchNormalMale" time="0.000" classname="Tests.BestMutch">
    <skipped/>
  </testcase> <!-- BestMatchNormalMale -->
  <testcase name="BestMatchCheepMale" time="0.000" classname="Tests.BestMutch">
    <skipped/>
  </testcase> <!-- BestMatchCheepMale -->
  <testcase name="BestMatchSelfIdentity" time="0.000" classname="Tests.BestMutch">
    <skipped/>
  </testcase> <!-- BestMatchSelfIdentity -->
</testsuite> <!-- Tests.BestMutch -->
